<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Events on CSTAR | IIIT Hyderabad</title><link>https://cstar-iiit.github.io/events/</link><description>Recent content in Events on CSTAR | IIIT Hyderabad</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Sep 2021 17:00:00 +0530</lastBuildDate><atom:link href="https://cstar-iiit.github.io/events/index.xml" rel="self" type="application/rss+xml"/><item><title>Can Quantum Computers Outperform Gradient Descent?</title><link>https://cstar-iiit.github.io/events/can_quantum_computers_outperform_gradient_descent/</link><pubDate>Wed, 15 Sep 2021 17:00:00 +0530</pubDate><guid>https://cstar-iiit.github.io/events/can_quantum_computers_outperform_gradient_descent/</guid><description>Abstract: Gradient descent is a marvel of an algorithm that allows very efficient optimization in high-dimensional spaces. It was provably the best algorithm for well-structured optimization tasks. such as non-smooth convex optimization in large dimensions. But then came quantum computers with their fancy superpositions, pulling off amazing feats of computation. So questions of the form &amp;ldquo;Is this the best algorithm we have?&amp;rdquo; had to be asked all over again.
In this talk we will take a look at gradient descent, at the task of non-smooth convex optimization, and we&amp;rsquo;ll show that quantum computers can&amp;rsquo;t improve upon gradient descent in general.</description></item><item><title>Functional Lower Bounds for Restricted Arithmetic Circuits of Depth Four</title><link>https://cstar-iiit.github.io/events/functional-lower-bounds-for-restricted-arithmetic-circuits-of-depth-4/</link><pubDate>Wed, 08 Sep 2021 16:00:00 +0530</pubDate><guid>https://cstar-iiit.github.io/events/functional-lower-bounds-for-restricted-arithmetic-circuits-of-depth-4/</guid><description>Abstract: One of the major motivations to study Arithmetic/Algebraic Circuit Complexity was due to the “slow” progress in proving lower bounds in Boolean Circuit Complexity. Based on some empirical evidence, researchers believed that the power of underlying algebra and the possibility of cancellations could help understand computations on the algebraic setting.
In this talk we shall outline some of the connections between Boolean Circuit Complexity and Algebraic Circuit Complexity. In particular (by building upon some previous work [due to Yao, Beigel &amp;amp; Tarui, Forbes, Kumar &amp;amp; Saptharishi], we shall present a path towards proving stronger (nonuniform) ACC0 lower bounds via proving “functional” lower bounds in the algebraic setting.</description></item><item><title>Lower Bounds in Algebraic Circuit Complexity</title><link>https://cstar-iiit.github.io/events/lower_bounds_in_algebraic_circuit_complexity/</link><pubDate>Wed, 01 Sep 2021 17:00:00 +0530</pubDate><guid>https://cstar-iiit.github.io/events/lower_bounds_in_algebraic_circuit_complexity/</guid><description>Abstract: Algebraic circuits and formulas are the standard computational models for computing multivariate polynomials. They are similar to boolean circuits and formulas except that in this case, gates are labelled by &amp;lsquo;+&amp;rsquo; or &amp;lsquo;x&amp;rsquo;. Another important model is that of an algebraic branching program (ABP), which is an intermediate model between circuits and formulas in terms of computational power. I will begin the talk by defining these models of computation formally, and then survey some of the results that have helped shape our understanding of algebraic circuits.</description></item><item><title>Shortest Paths in Time-varying Networks</title><link>https://cstar-iiit.github.io/events/shortest_paths_in_time_varying_networks/</link><pubDate>Wed, 18 Aug 2021 17:00:00 +0530</pubDate><guid>https://cstar-iiit.github.io/events/shortest_paths_in_time_varying_networks/</guid><description>Abstract: Suppose you are given the traffic situation on each road of your city and you want to find the quickest way to your workplace from your home. The city&amp;rsquo;s road network can be modelled by a graph whose edge weights represent the amount of traffic on the roads. Now the problem boils down to computing a shortest path in this graph, which can be solved by standard algorithms (Dijkstra&amp;rsquo;s algorithm, Bellman-Ford-Moore algorithm).</description></item></channel></rss>